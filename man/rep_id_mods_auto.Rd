% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/reputation_model.R
\name{rep_id_mods_auto}
\alias{rep_id_mods_auto}
\title{Individual level Moderators (automatic)}
\usage{
rep_id_mods_auto(data, target_self = NULL, p1_reports = NULL,
  p2_reports = NULL, id_mod_variable = NULL, interaction_term = NULL,
  n_triads = NULL, n_ts_per_p2s = 1, n_p2s_per_ts = 1,
  n_p1s_per_p2s = 1, n_p2s_per_p1s = 1, n_r1_per_r2 = 1,
  n_r2_per_r1 = 1)
}
\arguments{
\item{data}{The dataframe that contains the ratings, moderator variable, and the interaction term.
Data should be wide, with a row for every group of participants.
At a minimum, it must contain four columns: two ratings (one which is mean-centered),
one for the mean-centered moderator variable, and one for the interaction term.}

\item{target_self}{The column(s) that contain target self-reports.
If more than one is supplied, the target-wise order must match the other
rating types.}

\item{p1_reports}{The column(s) that contain P1 reports,
or ratings made by the person that knows the target directly.
If more than one is supplied, the target-wise order must match the other
rating types.}

\item{p2_reports}{The column(s) that contain P2 reports,
or ratings made by the person that knows the target indirectly through the corresponding P1.
Ratings should be grand-mean-centered to increase the interpretibility of the model parameters.
If more than one is supplied, the target-wise order must match the other rating types.}

\item{id_mod_variable}{The column(s) that contain the individual-level moderator of interest.
If more than one is supplied from multiple exchangeable triads,
the order must match the order of the ratings. Like P2-reports, the variable should be mean-centered
to facilitate interpretability.}

\item{interaction_term}{The column(s) that contain the interaction term, or the product of the
mean-centered rating (often P2-reports) and the mean-centered moderator variable.
If more than one is supplied from multiple exchangeable triads,
the target-wise order must match the order of the ratings.}

\item{n_triads}{The number of exchangeable triads in each group. By default, this is determined by
the method used by whichever specific model funciton is called.
For consensus, this is done by counting P1-reports; foraccuracy, this is done by counting
target self-reports. This parameter rarely needs to be changed.}

\item{n_ts_per_p2s}{The number of targets that each P2 rated. This defaults to 1.
Currently, only values of 1 are supported.}

\item{n_p2s_per_ts}{The number of P2s that rated each target;. This defaults to 1.
Currently, only values of 1 are supported.}

\item{n_p1s_per_p2s}{The number of P1s for every P2. This defaults to 1.
Currently, only values of 1 are supported.}

\item{n_p2s_per_p1s}{The number of P2s for every P1;. This defaults to 1.
Currently, only values of 1 are supported.}

\item{n_r1_per_r2}{The number of first ratings for each second rating. Currently, only 1:1 is supported.}

\item{n_r1_per_r2}{The number of second ratings for each first rating. Currently, only 1:1 is supported.}
}
\value{
The function returns an object of class \code{\link[lavaan:lavaan-class]{lavaan}}.
}
\description{
This is a wrapper function around the Individual-level moderator functions.
}
\details{
This chooses a function depending on which
variables are supplied. At a minimum, it requires two ratings,
an individual-level moderator variable, and the interaction term.

The estimated parameters depend upon which variables are supplied.

The function can handle up to n exchangeable triads.
}
\examples{
data("rep_sim_data")
# Prepare data
library(tidyverse)
moderator_data <- rep_sim_data \%>\%
mutate(B_C_agreeableness_cent = scale(B_C_agreeableness, scale = FALSE),
       D_A_agreeableness_cent = scale(D_A_agreeableness, scale = FALSE),
       B_iri_perspective_cent = scale(B_iri_perspective, scale = FALSE),
       D_iri_perspective_cent = scale(D_iri_perspective, scale = FALSE),
       B_ptXagree_interaction = B_C_agreeableness_cent*B_iri_perspective_cent,
       D_ptXagree_interaction = D_A_agreeableness_cent*D_iri_perspective_cent)

# Example for hearsay accuracy
rep_id_mods_auto(data = moderator_data,
                 target_self = c("C_C_agreeableness", "A_A_agreeableness"),
                 p2_reports = c("B_C_agreeableness_cent", "D_A_agreeableness_cent"),
                 id_mod_variable = c("B_iri_perspective_cent", "D_iri_perspective_cent"),
                 interaction_term = c("B_ptXagree_interaction", "D_ptXagree_interaction"))

# Example for hearsay consensus
rep_id_mods_auto(data = moderator_data,
                 p1_reports = c("A_C_agreeableness", "C_A_agreeableness"),
                 p2_reports = c("B_C_agreeableness_cent", "D_A_agreeableness_cent"),
                 id_mod_variable = c("B_iri_perspective_cent", "D_iri_perspective_cent"),
                 interaction_term = c("B_ptXagree_interaction", "D_ptXagree_interaction"))

}
