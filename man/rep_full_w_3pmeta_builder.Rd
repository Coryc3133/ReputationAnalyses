% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/reputation_model.R
\name{rep_full_w_3pmeta_builder}
\alias{rep_full_w_3pmeta_builder}
\title{Reputation Consensus, Accuracy, and 3rd-Person Meta-Perception Model Builder}
\usage{
rep_full_w_3pmeta_builder(p1_reports, p2_reports, target_self, p1_meta,
  p2_meta, n_triads = length(p1_reports), n_p1s_per_p2s = 1,
  n_p2s_per_p1s = 1, n_p1s_per_ts = 1, n_p2s_per_ts = 1,
  n_ts_per_p1s = 1, n_ts_per_p2s = 1)
}
\arguments{
\item{p1_reports}{Quoted column names that contain P1 reports,
or ratings made by the person that knows the target directly.
If more than one is supplied, the target-wise order must match the other
rating types.}

\item{p2_reports}{Quoted column names that contain P2 reports,
or ratings made by the person that knows the target indirectly through the corresponding P1.
If more than one is supplied, the target-wise order must match the other
rating types.}

\item{target_self}{Quoted column names that contain target self-reports.
If more than one is supplied, the target-wise order must match the other
rating types.}

\item{p1_meta}{Quoted column names that contain P1 3rd person Meta-perceptions,
or P1's ratings of how they think P2 sees the target.
If more than one is supplied, the target-wise order must match the other
rating types.}

\item{p2_meta}{Quoted column names that contain P2 3rd person Meta-perceptions,
or P2's ratings of how they think P1 sees the target.
If more than one is supplied, the target-wise order must match the other
rating types.}

\item{n_triads}{The number of exchangeable triads in each group. By default, this is determined by
counting the number of P1 reports. It is rare that this parameter would need to be changed.}

\item{n_p1s_per_p2s}{The number of P1s for every P2. This defaults to 1.
Currently, only values of 1 are supported.}

\item{n_p2s_per_p1s}{The number of P2s for every P1;. This defaults to 1.
Currently, only values of 1 are supported.}

\item{n_p1s_per_ts}{The number of P1s for every target;. This defaults to 1.
Currently, only values of 1 are supported.}

\item{n_p2s_per_ts}{The number of P2s for every target;. This defaults to 1.
Currently, only values of 1 are supported.}

\item{n_ts_per_p1s}{The number of targets for every P1;. This defaults to 1.
Currently, only values of 1 are supported.}

\item{n_ts_per_p2s}{The number of targets for every P2;. This defaults to 1.
Currently, only values of 1 are supported.}
}
\value{
The function returns a list containing an
object of class \code{\link[tibble:tbl_df-class]{tbl_df}} and a string object of the model
in lavaan syntax. Model information
includes the type of model, the number of exchangeable triads, and the number
of p1s per p2s, and the number of p2s per p1s, the number of p2s per target, and the number of targets per p2s,
the number of targets per p1s, and the number of p1s per target.
}
\description{
This takes a vector of P1-, P2-, target self-reports, and
third-person meta-perceptions (for P1 and P2) and builds
a model estimating the possible hearsay reputation parameters in lavaan syntax.
Those parameters are:
\describe{
\item{hc}{hearsay consensus; the correlation between P1(T) & P2(T)}
\item{ha}{hearsay accuracy; the correation between P2(T) & T(T)}
\item{da}{direct accuracy; the correlation between P1(T) & T(T)}
\item{p1ma}{P1 Meta-Accuracy; the correlation between P1(P2(T)) & P2(T)}
\item{p2ma}{P2 Meta-Accuracy; the correlation between P2(P1(T)) & P1(T)}
\item{as_ac1}{ P1 Assumed Accuracy; the correlation between P1(P2(T)) & T(T)}
\item{as_con1}{P1 Assumed Consensus; the correlation between P1(P2(T)) & P1(T)}
\item{mp_rec}{ Meta-Perception Reciprocity; the correlation between P1(P2(T)) & P2(P1(T))}
\item{as_ac2 }{P2 Assumed Accuracy; the correlation between P2(P1(T)) & T(T)}
\item{as_con2}{P2 Assumed Consensus; the correlation between P2(P1(T)) & P2(T)}
\item{int_p1}{Intercept for P1(T)}
\item{int_p2}{Intercept for P2(T)}
\item{int_self}{Intercept for T(T)}
\item{int_mp1}{Intercept for P1(P2(T))}
\item{int_mp2}{Intercept for P2(P1(T))}
\item{v_p1}{variance for P1(T)}
\item{v_p2}{variance for P2(T)}
\item{v_self}{variance for T(T)}
\item{v_mp1}{variance for P1(P2(T))}
\item{v_mp2}{variance for P2(P1(T))}
\item{p1_p2_rel_el}{P1-P2 Relative Elevation (i.e., Mean P1(T) - Mean P2(T))}
\item{self_p2_rel_el}{Self-P2 Relative Elevation (i.e., Mean T(T) - Mean P2(T))}
\item{self_p1_rel_el}{Self-P1 Relative Elevation (i.e., Mean T(T) - Mean P1(T))}
\item{p1_meta_rel_el}{P1 Meta Relative Elevation (i.e., mean P2(T) - Mean P1(P2(T)))}
\item{p2_meta_rel_el}{P2 Meta Relative Elevation (i.e., mean P1(T) - Mean P2(P1(T)))}
}
\emph{If n exchangeable triads > 1:}
\describe{
\item{rec}{direct reciprocity; the correlation between opposit P1(T)s (e.g., A(C) <-> C(A))}
\item{h}{hearsay reciprocity; the correlation between exchangeable P2(T)s (e.g., B(C) <-> D(A))}
\item{m}{unnamed parameter; The correlation between P2(T) and the opposite P1(T) in a group. (e.g., B(C) <-> C(A))}
\item{tru_sim}{True Similarity; the correlation between targets' self-reports. (e.g., A(A) <-> C(C))}
\item{as_sim_3p}{Third-person assumed similarity; correlation between P2(T) and P1's self-report (e.g., B(C) <- A(A))}
\item{as_sim_1p}{First-person assumed similarity (i.e., interpersonal assumed similarity); correlation between P1(T) and P1's self-report (e.g., A(C) <-> A(A))}
\item{as_sim_p1m}{P1 Meta-assumed similarity (e.g., A(B(C)) <-> A(A))}
\item{ukp1m1}{unknown p1-meta 1}{P1 meta-perception with opposite P1-report (e.g., A(B(C)) <-> C(A))).}
\item{p1meta_sim}{P1 Meta-Similarity}{correlation between exchangeable P1 meta-perceptions (e.g., A(B(C)) <-> C(D(A))).}
\item{ukp2m1}{unknown P2-meta 1}{P2 Meta-perception with exchangeable P2-reports (e.g., B(A(C)) <-> D(A))}
\item{ukp2m2}{unknown P2-meta 2}{P2 Meta-perception with exchangeable target self-report (e.g., B(A(C) <-> A(A)))}
\item{ukp2m3}{unknown P2-meta 3}{P2 Meta-perception with exchangeable P1-reports (e.g., B(A(C)) <-> C(A))}
\item{p2meta_sim}{P2 Meta-Similarity}{correlation between exchangeable P2 meta-perceptions (e.g., B(A(C)) <-> D(C(A))).}
\item{ukm1}{unknown Meta-perception}{P1 Meta-perception with exchangeable P2 Meta-Perception (e.g., A(B(C)) <-> D(C(A)))}}
}
\details{
The function can handle up to n exchangeable triads.
}
\examples{
data("rep_sim_data")
          rep_full_3pmeta_model <- rep_full_w_3pmeta_builder(p1_reports = c("A_C_agreeableness", "C_A_agreeableness"),
                            p2_reports = c("B_C_agreeableness", "D_A_agreeableness"),
                            target_self = c("C_C_agreeableness", "A_A_agreeableness"),
                            p1_meta = c("A_B_C_agree_meta", "C_D_A_agree_meta"),
                            p2_meta = c("B_A_C_agree_meta", "D_C_A_agree_meta"))
}
